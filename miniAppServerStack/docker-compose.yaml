version: '3.9'

services:

  mini_redis_app:
    container_name: mini_redis_app
    image: redis:6.2-alpine
    restart: always
    ports:
      - '26379:6379'
    command: redis-server --save 20 1
    volumes:
      - ./cache:/data
    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network
  mini_mongo_app:
    container_name: mini_mongo_app
    image: mongo:5.0.14
    depends_on:
      - mini_redis_app
    ports:
      - "47077:27017"
    volumes:
      - ./mongodb-data:/data/db
      - /etc/localtime:/etc/localtime:ro
    environment:
      - AUTH=no
      # 以下数据库验证信息暂时不启用
      - MONGODB_ADMIN_USER=admin
      - MONGODB_ADMIN_PASS=admin
      - MONGODB_APPLICATION_DATABASE=app
      - MONGODB_APPLICATION_USER=app
    restart: always

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network

  # 登陆/用户信息
  mini_member_app:
    container_name: mini_member_app
    image: r2day/mini-member-api
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/member.env:/app/.env
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network

  # 登陆/用户信息
  mini_appearance_app:
    container_name: mini_appearance_app
    image: r2day/mini-appearance-api
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/appearance.env:/app/.env
      - ./data/bbs.json:/app/api/bbs/example.json
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network

  # 登陆/用户信息
  mini_store_app:
    container_name: mini_store_app
    image: r2day/mini-store-api
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/store.env:/app/.env
      - ./data/store.json:/app/api/info/example.json
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network

  store_center_app:
    container_name: store_center_app
    image: r2day/store-center:pro
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/store_center.env:/app/.env
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network
  manage_store_center_app:
    container_name: manage_store_center_app
    image: r2day/store-center:pro
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/manage_store.env:/app/.env
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network

  product_center_app:
    container_name: product_center_app
    image: r2day/product-center:pro
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/product_center.env:/app/.env
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network
  manage_product_center_app:
    container_name: manage_product_center_app
    image: r2day/product-center
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/manage_product.env:/app/.env
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network


  order_center_app:
    container_name: order_center_app
    image: r2day/order-center:pro
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/order_center.env:/app/.env
      - ./logs/order_center/:/app/log  
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network
  member_center_app:
    container_name: member_center_app
    image: r2day/member-center:pro
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/member_center.env:/app/.env
      - ./logs/member/:/app/log/
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network
  pay_app:
    container_name: pay_app
    image: r2day/pay-api:pro
    depends_on:
      - mini_member_app
    volumes:
      - ./config/pay.env:/app/.env
      - ./config/apiclient_key.pem:/app/config/apiclient_key.pem
      - ./logs/pay-api/:/app/log/
    working_dir: "/app/"
    restart: on-failure:5

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network
        #  pad_app:
        #    container_name: pad_app
        #    image: r2day/work-pad
        #    ports:
        #      - "8000:8000"
        #    depends_on:
        #      - order_center_app
        #    volumes:
        #      - ./config/pad.env:/app/.env
        #    working_dir: "/app/"
        #    restart: on-failure:5
        #    # 需要使用到该数据库的都需要声明这个网络
        #    networks:
        #      - share-network
  take_out_app:
    container_name: take_out_app
    image: r2day/take-out:pro
    depends_on:
      - mini_redis_app
    volumes:
      - ./config/take_out.env:/app/.env
      - ./logs/take-out-api/:/app/log/
    working_dir: "/app/"
    restart: on-failure:5
    ports:
      - "31115:8080"

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network
   # 登陆/用户信息
  manage_auth_app:
    container_name: manage_auth_app
    image: r2day/auth-api:pro
    depends_on:
      - mini_mongo_app
    volumes:
      - ./config/auth.env:/app/.env
      - ./config/init-data:/app/prepare
    working_dir: "/app/"
    restart: always

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network
  manager_desk_app:
    container_name: manager_desk_app
    image: r2day/manager-desk
    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network

  mini_nginx_app:
    container_name: mini_nginx_app
    image: nginx:1.22.1
    ports:
      - "5580:80"
    depends_on:
      - pay_app
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - /etc/localtime:/etc/localtime:ro

    # 需要使用到该数据库的都需要声明这个网络
    networks:
      - share-network

# 同一个docker-compose.yaml 只需要在末尾声明一次即可
networks:
  share-network:
    name: share-network

